image(c(1,2,3,4),c(1,2,3,4),matrix(rep(c(1,2,3,1,2,3,1,2,3,ncol=9))))
a <- matrix(rep(c(1,2,3,1,2,3,1,2,3,ncol=9)))
dim(a)
a
a <- matrix(rep(c(1,2,3,1,2,3,1,2,3,ncol=3)))
a
a <- matrix(rep(c(1,2,3,1,2,3,1,2,3),ncol=3))
a
a <- matrix(c(1,2,3,1,2,3,1,2,3),ncol=3))
a
a <- matrix(c(1,2,3,1,2,3,1,2,3),ncol=3)
a
image(c(1,2,3,4),c(1,2,3,4),a)
data(diamonds)
diamonds
str(diamonds)
?diamonds
library(UsingR)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mean(x)
mu = 0.0025
sum(w*(x-mu)^2)
mu = 0.3
sum(w*(x-mu)^2)
mu = 0.1471
sum(w*(x-mu)^2)
mu = 1.077
sum(w*(x-mu)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
sum(x*y)/sum(x^2)
?I
lm(I(x - mean(x)) ~ I(y - mean(y)) -1)
lm(I(I(y - mean(y)) ~ x - mean(x)) -1)
lm(I(y - mean(y)) ~I(x - mean(x)) -1)
lm(x ~ y)
lm(x ~ y -1)
lm(y ~ x)
lm(y ~ x -1)
plot(y ~x)
?abline
plot(y ~x)
abline(0,0.8263)
plot(y ~x)
abline(0,-1.713  )
sum(x*y)/sum(x^2)
lm(y ~ x -1)
data(mtcars)
head(mtcars)
with(mtcars, coef(lm(mpg ~ wt)))
with(mtcars, plot(mpg ~ wt))
abline(37.285, -5.344472)
1.5*.4
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
xn
mean(x)
mean(xn)
sd(xn)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
?cor
cor(y,x)*sd(y)/sd(x)
coef(lm(y ~ x))
x <- rnorm(100, mean = 0)
y <- rnorm(100, mean = 0)
coef(lm(y ~x)))
coef(lm(y ~x))
y <- rnorm(10000, mean = 0)
x <- rnorm(10000, mean = 0)
y <- rnorm(10000, mean = 0)
coef(lm(y ~x))
x <- rnorm(100000, mean = 0)
y <- rnorm(100000, mean = 0)
coef(lm(y ~x))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(x~y))
coef(lm(y~x))
-0.04461609 /-1.712846
var(x)
var(y)/var(x)
var(x)/var(y)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mu = mean(x)
sum(w*(x-mu)^2)
mu
sum(w*(x-0.300)^2)
sum(w*(x-1.077)^2)
sum(w*(x-0.0025)^2)
sum(w*(x-0.1471)^2)
mean(w)
mean(x)
?seq
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
length(seq(0,2,0.01))
?vector
s <- vector(length = 201)
s
s <- vector(mode = "double", length = 201)
s
for ( i in seq(0,2,0.01)) {
sum(w*(x-i)^2)
}
for ( i in seq(0,2,0.01)) {
print(sum(w*(x-i)^2) )
}
seq(0,2,0.01))[16]
seq(0,2,0.01)[16]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
coef(lm(y ~ x))
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs -rhs
all.equal(lhs, rhs)
varChild(galton$child)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(galton$parent))
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild, sum(varRes, varEst))
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages("rCharts")
install.packages("installr")
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
beta1 <- cor(y,x)* sd(y)/sd(x)
beta1
beat0 <- mean(y) - beta1*mean(x)
e       <- y - beta0 - beta1 * x
beta0   <- mean(y) - beta1*mean(x)
e       <- y - beta0 - beta1 * x
sigma   <- sqrt(sum(e^2)/(length(x) - 2))
seBeta0 <- (1/length(x) + mean(x)^2 / ssx)^0.5 * sigma
ssx     <- sum((x - mean(x))^2)
seBeta0 <- (1/length(x) + mean(x)^2 / ssx)^0.5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0  <- beta0/seBeta0
tBeta1  <- beta1 / seBeta1
pBeta0  <- 2 * pt(abs(tBeta0), df = length(x) - 2, lower.tail = FALSE)
pBeta1  <- 2 * pt(abs(tBeta1), df = length(x) - 2, lower.tail = FALSE)
pBeta1
pBeta0
summary(fit)
sigma
resid <- sum(y - beta0 - beta1 x)
resid <- sum(y - beta0 - beta1 * x)
resid^2/length(resid)
resid^2/(length(resid) - 2)
resid <- sum((y - beta0 - beta1 * x)^2)
resid/(length(resid) - 2)
resid/(length(x) - 2)
sqrt(resid/(length(x) - 2))
sigma
library(datasets)
data(mtcars)
names(mtcars)
fit <- with(mtcars, lm(mpg ~ wt))
summary(fit)
summary(fit)$coefficient
co <- summary(fit)$coefficient
co <- summary(fit)$coefficient
co[2,1] + c(-1,1) * qt(0.975, df = fit$df) * co[2,2]
?mtcars
i <- c(78,30)
d	<- c(37,	33)
m <- c(15,	7)
rbind(i,d,m)
tab <- rbind(i,d,m)
?chisq.test
?chisq.test()
chisq.test(tab)
chisq.test(tab, simulate.p.value = TRUE)
chisq.test(tab, simulate.p.value = TRUE, B =10000)
tab2 <- cbind(i,d,m)
tab2
chisq.test(tab2, simulate.p.value = TRUE, B =10000)
chisq.test(tab2)
ir <- c(0,1)
tab <- rbind(i,d,m)
tab2 <- cbind(i,d,m)
chisq.test(tab2)
rbind(n,e,z,d,v)
n <- c(4,        1)
e <- c(2,	0)
z <- c(71,	26)
d <- c(38,	25)
v <- c(16,	19)
rbind(n,e,z,d,v)
tab3 <- rbind(n,e,z,d,v)
chisq.test(tab3)
chisq.test(c(131,71))
head(mtcars)
summary(fit)
predict(fit, newdata = 3, interval = ("prediction"))
predict(fit, newdata = 3, interval = ("prediction"))
fit <- with(mtcars, lm(mpg ~ wt))
predict(fit, newdata = 3, interval = ("prediction"))
newx <- c(wt = 3)
predict(fit, newdata = newx, interval = ("prediction"))
newx
newx <- data.frame(c(wt = 3))
predict(fit, newdata = newx, interval = ("prediction"))
newx <- head(mtcars, 1)
newx
newx$wt <- 3
predict(fit, newdata = newx, interval = ("prediction"))
summary(fit)
3.046*sqrt(1 + 1/length(mtcars$wt) + ( (3 - mean(mtcars$wt))^2 / ((sum((mtcars$wt - mean(mtcars$wt))^2) )))
3.046*sqrt(1 + 1/length(mtcars$wt) + ((3 - mean(mtcars$wt))^2) /
((sum((mtcars$wt - mean(mtcars$wt))^2) )))
3 + c(-1,1) * qt(0.975, df = length(mtcars$wt) - 2) * 3.095612
3*(-5.344)+37.2851 + c(-1,1) * qt(0.975, df = length(mtcars$wt) - 2) * 3.095612
mtcars$wt <- mtcars$wt / 2
3*(-5.344)+37.2851 + c(-1,1) * qt(0.975, df = length(mtcars$wt) - 2) * 3.095612
mtcars$wt <- mtcars$wt * 2
mt <- mtcars
mt$wt <- mt$wt/2
fit <- with(mt, lm(mpg ~ wt))
predict(fit, newdata = newx, interval = ("prediction"))
predict(fit, newdata = newx, interval = ("confidence"))
cf <- summary(fit)$coefficient
cf
cf[2,1] + c(-1,1) * qt(0.975, df = fit$df) * cf[2,2]
library(datasets)
data(mtcars)
fit <- with(mtcars, lm(mpg ~ wt))
sum(mtcars$mpg - mean(mtcars$wt))
sum((mtcars$mpg - mean(mtcars$wt))^2)
summary(fit)
summary(fit)$residual
sum((mtcars$mpg - summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$wt))^2) / sum((mtcars$mpg - summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$wt))^2)
sum((mtcars$mpg - summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$mpg))^2)
sum((mtcars$mpg - summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$mpg))^2) /
sum((mtcars$mpg - summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$mpg))^2) /
sum((mtcars$mpg - summary(fit)$residual)^2)
mean(mtcars$mpg)
sum((mtcars$mpg - mean(mtcars$mpg))^2) /
sum((summary(fit)$residual)^2)
sum((summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$mpg))^2)
cf
cf <- summary(fit)$coefficient
cf
sum(mtcars$mpg - 37.28513 - (-5.344472) * mtcars$wt)
sum((mtcars$mpg - (37.28513 + (-5.344472) * mtcars$wt))^2)
sum((summary(fit)$residual)^2)
sum((mtcars$mpg - mean(mtcars$mpg))^2) /
sum((summary(fit)$residual)^2)
rm(list = ls())
library(datasets)
data(mtcars)
df <- mtcars
y <- df$mpg
x <- df$wt
fit <- lm(y ~ x)
summary(fit)
cf <- summary(fit)$coefficients
cf
37.285126 + (-5.344472) * mean(x)
37.285126 + (-5.344472) * mean(x)
newx <- head(df,1)
newx$wt <- mean(x)
predict(fit, newdata = newx, interval = "confidence")
newx
sigma <- 3.046*sqrt(1/length(x))
20.09062 + c(-1,1) * qt(0.975, df = cf$df) * sigma
fit$df
20.09062 + c(-1,1) * qt(0.975, df = fit$df) * sigma
summary(lm(y ~ x))
summary(fit)
summary(lm(y ~ x1))$coefficients
x1 <- x+7
summary(lm(y ~ x1))$coefficients
summary(fit)$coefficients
74.696427/37.285126
37.285126  + 7 * -5.344472
-5.344472 + 7
37.285126  + 7 * -5.344472
37.285126  + 7 * (-5.344472)
37.285126 - (-5.344472 *7)
lm(y ~ mean(y))
summary(lm(y ~ 1))
mean(y)
summary(lm(y ~ 1))$residuals
sum((summary(lm(y ~ 1))$residuals)^2)
eintercept <- sum((summary(lm(y ~ 1))$residuals)^2)
summary(fit)$residuals
sum((summary(fit)$residuals)^2)
etotal <- sum((summary(fit)$residuals)^2)
eintercept <- sum((summary(lm(y ~ 1))$residuals)^2)
eintercept / etotal
etotal / eintercept
eintercept / (etotal + eintercept)
install.packages('stringr')
devtools::install_github('muschellij2/slidify')
library(slidify)
slidify(index.rmd)
setwd("~/Desktop/DataProducts/PitchPresentation")
slidify(index.rmd)
slidify(index.Rmd)
slidify(~/Desktop/DataProducts/PitchPresentation/index.Rmd)
browseURL('index.html')
setwd("~/Desktop/DataProducts")
library(slidify)
library(slidifyLibraries)
author("PitchPresentation")
require(rCharts); require(babynames); require(dplyr)
df <- babynames
df$prop <- round(df$prop * 100,2)
df <- babynames
df$prop <- round(df$prop * 100,2)
df %>% filter(name == "William" & sex == "M" |
name == "Jennifer" & sex == "F",
year >= 1900 & year <= 2013)
p1 <- nPlot(n ~ year,
data = plotdf(),
group = "name",
plotdf <- df %>% filter(name == "William" & sex == "M" |
name == "Jennifer" & sex == "F",
year >= 1900 & year <= 2013)
p1 <- nPlot(n ~ year,
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
plotdf <- df %>% filter(name == "William" & sex == "M" |
name == "Jennifer" & sex == "F",
year >= 1900 & year <= 2013)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
require(rCharts); require(babynames); require(dplyr); library(knitr)
plotdf <- df %>% filter(name == "William"  & sex == "M" |
name == "Jennifer" & sex == "F" |
name == "Peter"    & sex == "M",
year >= 1900 & year <= 2013)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "William"  & sex == "M" |
name == "Jennifer" & sex == "F" |
name == "John"    & sex == "M",
year >= 1900 & year <= 2013)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "William"  & sex == "M" |
name == "Jennifer" & sex == "F" |
name == "John"    & sex == "M",
year >= 1950 & year <= 2013)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
df <- babynames
df$prop <- round(df$prop * 100,2)
plotdf <- df %>% filter(name == "Anna"  & sex == "F" |
name == "Maria" & sex == "F" |
name == "Lena"    & sex == "M",
year >= 1900 & year <= 1950)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "Anna"  & sex == "F" |
name == "Maria" & sex == "F" |
name == "Jennifer"    & sex == "M",
year >= 1900 & year <= 1950)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "Anna"  & sex == "F" |
name == "Maria" & sex == "F" |
name == "Marie"    & sex == "M",
year >= 1900 & year <= 1950)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "Anna"  & sex == "F" |
name == "Maria" & sex == "F" |
name == "Mary"    & sex == "M",
year >= 1900 & year <= 1950)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "Anna"  & sex == "F" |
name == "Maria" & sex == "F" |
name == "Sarah"    & sex == "M",
year >= 1900 & year <= 1950)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
plotdf <- df %>% filter(name == "Anna"  & sex == "F" |
name == "Maria" & sex == "F" |
name == "Diana"    & sex == "F",
year >= 1900 & year <= 1950)
p1 <- nPlot(n ~ year,
data = plotdf,
group = "name",
type = "multiBarChart")
p1$yAxis(axisLabel = "Count", width = 40)
p1$xAxis(axisLabel = "Year")
p1$set(dom = 'bild')
p1
df2 <- df %>% group_by(year, sex) %>%
mutate(position = min_rank(desc(n))) %>%
filter(position == 1,
sex == "F",
year >= 1990 & year <= 2013)
p3 <- nPlot(n ~ year,
data = df2,
group = "name",
type = "multiBarChart")
p3$yAxis(axisLabel = "Frequency", width = 40)
p3$xAxis(axisLabel = "Year")
p3$set(dom = 'bild3')
p3
publish(title = 'AppPitch', 'index.html', host = 'rpubs')
getwd()
publish(title = 'AppPitch', 'index.html', host = 'rpubs')
publish(title = 'AppPitch', 'index.html', host = 'rpubs')
publish(title = 'AppPitch', 'index.html', host = 'rpubs')
publish(title = 'SlidifyPitch', 'index.html', host = 'rpubs')
p3$print("chart1")
require(slidifyLibraries)
require(slidify)
